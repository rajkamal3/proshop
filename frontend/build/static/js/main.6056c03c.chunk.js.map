{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userUpdate","userDelete","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","ListGroupItem","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","href","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","createdProduct","loadingCreate","errorCreate","successCreate","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6056c03c.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderListMyReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListReducer\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userDelete: userDeleteReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {};\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from './../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS\r\n} from './../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => (x.product === existItem.product ? item : x))\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            };\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            };\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            };\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            };\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            };\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            };\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            };\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            };\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                onChange={e => setKeyword(e.target.value)}\r\n                placeholder=\"Search products...\"\r\n                className=\"mr-sm-2 ml-sm-5\"\r\n            ></Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from './../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/users/', { name, email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/`, config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS\r\n        });\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SearchBox from './SearchBox';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from './../actions/userActions';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id=\"username\">\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i>Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                                    <LinkContainer to=\"/admin/userlist\">\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/productlist\">\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/orderlist\">\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i\r\n                    style={{ color: color }}\r\n                    className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color: color }}\r\n                    className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color: color }}\r\n                    className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color: color }}\r\n                    className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color: color }}\r\n                    className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n};\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from './../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/javascript',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/javascript',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listTopProducts = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map(x => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from './../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark\">\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className=\"carousel-caption\">\r\n                            <h2>\r\n                                {product.name} (${product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keyword\" content={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to ProShop',\r\n    description: 'We sell quality products',\r\n    keywords: 'electronics, buy electronics, quality products'\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from './../components/Product';\r\nimport { listProducts } from './../actions/productActions';\r\nimport Message from './../components/Message';\r\nimport Loader from './../components/Loader';\r\nimport Paginate from './../components/Paginate';\r\nimport ProductCarousel from './../components/ProductCarousel';\r\nimport Meta from './../components/Meta';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                <Link to=\"/\" className=\"btn btn-light\">\r\n                    Go back\r\n                </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from './../components/Rating';\r\nimport Message from './../components/Message';\r\nimport Loader from './../components/Loader';\r\nimport Meta from './../components/Meta';\r\nimport { listProductDetails, createProductReview } from './../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from './../constants/productConstants';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(1);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review submitted.');\r\n            setRating(0);\r\n            setComment('');\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={qty}\r\n                                                        onChange={e => setQty(e.target.value)}\r\n                                                    >\r\n                                                        {[...Array(product.countInStock).keys()].map(x => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className=\"btn-block\"\r\n                                            type=\"button\"\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId=\"rating\">\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={rating}\r\n                                                    onChange={e => setRating(e.target.value)}\r\n                                                >\r\n                                                    <option value=\"\">Select...</option>\r\n                                                    <option value=\"1\">1 - Poor</option>\r\n                                                    <option value=\"2\">2 - Fair</option>\r\n                                                    <option value=\"3\">3 - Good</option>\r\n                                                    <option value=\"4\">4 - Very Good</option>\r\n                                                    <option value=\"5\">5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"comment\">\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    row=\"3\"\r\n                                                    value={comment}\r\n                                                    onChange={e => setComment(e.target.value)}\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type=\"submit\" variant=\"primary\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please <Link to=\"/login\">sign in</Link> to write a review{' '}\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from './../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = data => dispatch => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = data => dispatch => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport Message from './../components/Message';\r\nimport { addToCart, removeFromCart } from './../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = id => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping cart</h1>\r\n                {cartItems === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty.<Link to=\"/\">Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={e => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>$\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"btn-block\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed to ckeckout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { register } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Enter your name\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm password\"\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an account already? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from './../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {success && <Message variant=\"success\">Profile updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            placeholder=\"Enter your name\"\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={confirmPassword}\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from './../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders/`, order, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deliverOrder = order => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from './../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your address\"\r\n                        value={address}\r\n                        required\r\n                        onChange={e => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your city\"\r\n                        value={city}\r\n                        required\r\n                        onChange={e => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your postal code\"\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={e => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your country\"\r\n                        value={country}\r\n                        required\r\n                        onChange={e => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from './../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"PayPal or Credit Card\"\r\n                            id=\"PayPal\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"PayPal\"\r\n                            checked\r\n                            onChange={e => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                        {/* <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Stripe\"\r\n                            id=\"Stripe\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"Stripe\"\r\n                            onChange={e => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from './../components/CheckoutSteps';\r\nimport { createOrder } from './../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    // Calculate prices\r\n    const addDecimals = num => {\r\n        return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                                {cart.shippingAddress.postalCode} , {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>{error && <Message variant=\"danger\">{error}</Message>}</ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"btn-block\"\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, ListGroup, Image, Card, Button, ListGroupItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from './../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from './../actions/orderActions';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from './../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    if (!loading) {\r\n        const addDecimals = num => {\r\n            return (Math.round(num * 100) / 100).toFixed(2);\r\n        };\r\n\r\n        order.order.itemsPrice = addDecimals(\r\n            order.order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        }\r\n\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\r\n\r\n    const successPaymentHandler = paymentResult => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.order.shippingAddress.address}, {order.order.shippingAddress.city},{' '}\r\n                                {order.order.shippingAddress.postalCode} , {order.order.shippingAddress.country}\r\n                            </p>\r\n                            {order.order.isDelivered ? (\r\n                                <Message variant=\"success\">Delivered on {order.order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not delivered</Message>\r\n                            )}\r\n                            {order.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.order.paymentMethod}\r\n                            </p>\r\n                            {order.order.isPaid ? (\r\n                                <Message variant=\"success\">Paid on {order.order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not paid</Message>\r\n                            )}\r\n                            {order.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroupItem>\r\n                                    <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\r\n                                        Mark as delivered\r\n                                    </Button>\r\n                                </ListGroupItem>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from './../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete]);\r\n\r\n    const deleteHandler = id => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\r\n                                    ) : (\r\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { USER_UPDATE_RESET } from './../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/admin/userlist');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [user, userId, dispatch, successUpdate, history]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter your name\"\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"isadmin\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Is admin\"\r\n                                checked={isAdmin}\r\n                                onChange={e => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listProducts, deleteProduct, createProduct } from './../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from './../constants/productConstants';\r\nimport Paginate from './../components/Paginate';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n        product: createdProduct\r\n    } = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate } = productCreate;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\r\n\r\n    const deleteHandler = id => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                        <i className=\"fas fa-plus\"></i>Create product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant=\"light\" className=\"btn-sm\">\r\n                                                <i className=\"fas fa-edit\"></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            className=\"btn-sm\"\r\n                                            onClick={() => deleteHandler(product._id)}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productlist');\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [product, productId, dispatch, history, successUpdate]);\r\n\r\n    const uploadFileHandler = async e => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            };\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter product's name\"\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter your price\"\r\n                                value={price}\r\n                                onChange={e => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"image\">\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter image url\"\r\n                                value={image}\r\n                                onChange={e => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                label=\"Choose file\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"brand\">\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter brand\"\r\n                                value={brand}\r\n                                onChange={e => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"countInStock\">\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter the count in stock\"\r\n                                value={countInStock}\r\n                                onChange={e => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter category\"\r\n                                value={category}\r\n                                onChange={e => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"description\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter description\"\r\n                                value={description}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <Header />\n            <main className=\"py-3\">\n                <Container>\n                    <Route path=\"/shipping\" component={ShippingScreen} />\n                    <Route path=\"/login\" component={LoginScreen} />\n                    <Route path=\"/register\" component={RegisterScreen} />\n                    <Route path=\"/payment\" component={PlaceOrderScreen} />\n                    <Route path=\"/orders/:id\" component={OrderScreen} />\n                    <Route path=\"/placeorder\" component={PaymentScreen} />\n                    <Route path=\"/profile\" component={ProfileScreen} />\n                    <Route path=\"/product/:id\" component={ProductScreen} />\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\n                    <Route path=\"/admin/userlist\" component={UserListScreen} />\n                    <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n                    <Route path=\"/admin/productlist\" component={ProductListScreen} exact />\n                    <Route path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} exact />\n                    <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n                    <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n                    <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n                    <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n                    <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact />\n                    <Route path=\"/\" component={HomeScreen} exact />\n                </Container>\n            </main>\n            <Footer />\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}